# build command is: podman build --tag='python:django' -f='dockerfile_django'
FROM docker.io/library/python
ARG PROJECT_NAME=${PROJECT_NAME}
ENV DJANGO_SETTINGS_MODULE=settings
ENV PYTHONPATH="/etc/opt/${PROJECT_NAME}/settings/:/opt/${PROJECT_NAME}/"
RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y libmagic1 libmagickwand-dev libjpeg62-turbo-dev zlib1g-dev python3-pil python3-pil.imagetk graphviz graphviz-dev python-wheel
RUN rm -rf /var/lib/apt/lists/*
RUN mkdir -p /opt/${PROJECT_NAME}; 
RUN mkdir -p /var/log/${PROJECT_NAME}; 
RUN mkdir -p /etc/opt/${PROJECT_NAME}/settings; 
RUN mkdir -p /etc/opt/${PROJECT_NAME}/static_files;
RUN useradd -m artisan
RUN chown artisan:artisan /opt/${PROJECT_NAME} /var/log/${PROJECT_NAME} /etc/opt/${PROJECT_NAME}/settings /etc/opt/${PROJECT_NAME}/static_files
RUN mkdir /home/artisan/django_venv
RUN chown artisan:artisan /home/artisan/django_venv
ENV VIRTUAL_ENV=/home/artisan/django_venv
RUN su artisan -c "python3 -m venv $VIRTUAL_ENV"
ENV PATH="$VIRTUAL_ENV/bin:$PATH
COPY ./pip_requirements_dev /tmp/pip_requirements
RUN python -m pip install --upgrade pip && pip install --no-cache-dir -r /tmp/pip_requirements
RUN rm -r /tmp/pip_requirements